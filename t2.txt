Keywords:-

1. let :- It is used to store the data in some variable.
let a = 5;
let b = "Akash"
let c = 6.09;
let d = true;

2. var :- It is also used to store the data in variable.
var a = 5;
var b = "Akash"
var c = 6.09;
var d = true;

But what is the difference in let and var: that is scope...
- let is only available in a specific scope but var is available in global.
- we cannot initialise same variable multiple time using let but we can with var.

3. const :- We cannot change the variable data after initialisation.
const a = 3
a = 5
It will show error as a is constant variable and we cannot assign value after initialisation.


Variable naming rule:-
- cannot be reserved keyword.
- should be meaningful (doesnot show error)
- cannot start with no.
- cannot contain space and '-' (use camel case eg:- akashParida)


Primitive Type:-
- String
- Number
- Boolean
- Undefined
- Null

Dynamic Typing:-
- Dynamic Typing is supported in JS. If we initialise a varible with String then we can reassign it to a Number.
eg:- 
let firstName = "Akash";
firstName = 3;
console.log(firstName);

Reference Types:-
- Objects
    let object = {lastName:"Parida",Gender:"Male",Age:21};
    console.log(object.lastName,object['Age']);
- Arrays : Can store all type of data in sequence.
    let arr = [1,3,'Akash'];
    console.log(arr[0]);
- Functions

Operators:-
    1.Arithmetic : + - * / % **
    2.Pre/Post Increment/Decrement : ++ -- 
    3.Assignment : x = x+5
    4.Comparision : < <= > >= == === != !==
        Difference between loose equality(==) and strict equality(===)
        '1'===1 => false
        1===1 => true
        '1'==1 = > true
        1==1 => true
    5.Ternary Operator : condn ? val1 : val2;
    6.Logical Operator : && || !
        falsy value :- Undefined null 0 false '' NaN
        truthy value :- not falsy
    7.Bitwise Operator : & |

Control Statement:-
    1.If-else
    2.Switch

Loop:-
    1.For Loop
    2.While
    3.Do While
    4.For of
    5.For in

For of loop :-

        