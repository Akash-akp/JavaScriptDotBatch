Promise :-
    State
      - pending 
      - fulfilled
      - reject
    code
      let p = new Promise(function(resolve,reject)).then().catch()

API :- Application Program Interface
     - fetch('url') -> get() (send and recieve data from api)
    converting fetch() to json:-
    async function utility(){
        const res = await fetch('api url');
        const json = await res.json();
        console.log(res); -> Promise
        console.log(json); -> JSON
    }

     - fetch('url',option) -> post()
        async function helper(){
            let options = {
                method: 'POST',
                body: JSON. stringify({
                    title: 'foo', 
                    body: 'bar', 
                    userld: 1,
                }) ,
                headers:{
                    'Content-type':'application/json; charset=UTF-8',
                }
            };
            let content = await fetch( 'https://jsonplaceholder.typicode.com/posts',options);
            let response = content.json();
            return response;
        }

        async function utility(){
            let ans = helper();
            console.log(ans);
        }

utility();



Async and await :- 



Closures:-



Classes and export module in JS